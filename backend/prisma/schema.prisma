// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id        String    @id  @default(cuid())
  name      String 
  email     String    @unique
  password  String
  phoneNo   String    @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  deletedAt DateTime?         // Soft delete flag
  cartItems     CartItem[] 
  role      Role @default(USER)
  seller    Seller?
}

model CartItem{
  id       String       @id @default(cuid())
  user      User        @relation(fields: [userId],references: [id])
  userId    String      
  product   Product  @relation(fields: [productId], references: [id])
  productId String
  quantity  Int      @default(1)
  createdAt DateTime @default(now())
}
model Product{
   id        String    @id  @default(cuid())
   name      String 
   description String?
  price       Float
  stock       Int
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  cartItems   CartItem[]
  seller      Seller  @relation(fields: [sellerId],references: [id])
  sellerId    String
}

model Seller{
  id        String    @id  @default(cuid())
  user      User      @relation(fields: [userId],references: [id])
  userId    String    @unique
  storeName String
  rating    Float?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  products  Product[]
}


enum Role{
  ADMIN
  USER
  SELLER
}

